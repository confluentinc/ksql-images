ARG DOCKER_UPSTREAM_REGISTRY
ARG DOCKER_UPSTREAM_TAG

FROM ${DOCKER_UPSTREAM_REGISTRY}confluentinc/cp-base-new:${DOCKER_UPSTREAM_TAG}

ENV COMPONENT=ksqldb-cli
ENV KSQL_CLASSPATH=/usr/share/java/${COMPONENT}/*

ARG PROJECT_VERSION
ARG ARTIFACT_ID
ARG GIT_COMMIT

LABEL maintainer="partner-support@confluent.io"
LABEL vendor="Confluent"
LABEL version=$GIT_COMMIT
LABEL release=$PROJECT_VERSION
LABEL name=$ARTIFACT_ID
LABEL summary="Confluent KSQL is the streaming SQL engine that enables real-time data processing against Apache KafkaÂ®."
LABEL io.confluent.docker.git.id=$GIT_COMMIT
ARG BUILD_NUMBER=-1
LABEL io.confluent.docker.build.number=$BUILD_NUMBER
LABEL io.confluent.docker=true

ARG CONFLUENT_VERSION
ARG CONFLUENT_PACKAGES_REPO
ARG CONFLUENT_PLATFORM_LABEL

USER root

COPY --chown=appuser:appuser target/${ARTIFACT_ID}-${PROJECT_VERSION}-package/share/java/${ARTIFACT_ID}/* /usr/share/java/${COMPONENT}/
COPY --chown=appuser:appuser target/${ARTIFACT_ID}-${PROJECT_VERSION}-package/share/doc/* /usr/share/doc/${ARTIFACT_ID}/
COPY --chown=appuser:appuser target/dependency/ksqldb-console-scripts-*/* /usr/bin/
COPY --chown=appuser:appuser target/dependency/ksqldb-etc-*/* /etc/ksqldb/

COPY --chown=appuser:appuser include/etc/confluent/docker /etc/confluent/docker

RUN mkdir -p /etc/${COMPONENT} /etc/${COMPONENT}/secrets /var/log/${COMPONENT} /usr/logs \
  && chown appuser:root -R /etc/${COMPONENT} /var/log/${COMPONENT} /usr/logs \
  && chmod ug+w -R /etc/${COMPONENT} /var/log/${COMPONENT} /usr/logs

RUN echo "===> Adding confluent repository...${CONFLUENT_PACKAGES_REPO}" \
    && rpm --import ${CONFLUENT_PACKAGES_REPO}/archive.key \
    && printf "[Confluent.dist] \n\
name=Confluent repository (dist) \n\
baseurl=${CONFLUENT_PACKAGES_REPO}/\$releasever \n\
gpgcheck=1 \n\
gpgkey=${CONFLUENT_PACKAGES_REPO}/archive.key \n\
enabled=1 \n\
\n\
[Confluent] \n\
name=Confluent repository \n\
baseurl=${CONFLUENT_PACKAGES_REPO}/ \n\
gpgcheck=1 \n\
gpgkey=${CONFLUENT_PACKAGES_REPO}/archive.key \n\
enabled=1 " > /etc/yum.repos.d/confluent.repo

RUN echo "===> Installing Confluent Hub client ${CONFLUENT_VERSION}..." \
    && yum install -y confluent-hub-client-${CONFLUENT_VERSION}

RUN echo "===> HACK to make cc-role-definitions available in docker image..." \
    && yum install -y yum-utils \
    && yum install -y cpio \
    && cd /tmp \
    && yumdownloader confluent-ksqldb --resolve \
    && CONFLUENT_KSQLDB_RPM=$(ls /tmp/confluent-ksqldb-*.rpm) \
    && echo "===> Extracting the rpm ${CONFLUENT_KSQLDB_RPM} to get the cc-role-definitions jar" \
    && mkdir /tmp/extracted-ksqldb \
    && cd /tmp/extracted-ksqldb \
    && rpm2cpio ${CONFLUENT_KSQLDB_RPM} | cpio -idmv \
    && cp /tmp/extracted-ksqldb/usr/share/java/ksqldb/cc-role-definitions*.jar /usr/share/java/${COMPONENT}/ \
    && echo "====> Removing the tmp files" \
    && rm -rf /tmp/extracted-ksqldb ${CONFLUENT_KSQLDB_RPM} \
    && chown appuser:appuser /usr/share/java/${COMPONENT}/cc-role-definitions*.jar \
    && echo "===> Cleaning up ..."  \
    && yum clean all \
    && rm -rf /tmp/* /etc/yum.repos.d/confluent.repo \
    && mkdir -p /usr/share/confluent-hub-components \
    && chown appuser:appuser -R /usr/share/confluent-hub-components

USER appuser

RUN bash /etc/confluent/docker/configure
ENV KSQL_LOG4J_OPTS=-Dlog4j.configuration=file:/etc/${COMPONENT}/log4j.properties

ENTRYPOINT ["ksql"]
CMD ["http://localhost:8088"]
