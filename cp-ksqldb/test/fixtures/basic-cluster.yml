---
version: '2'

services:
  kafka:
    hostname: kafka
    image: "${DOCKER_TEST_REGISTRY}confluentinc/cp-server:${DOCKER_TEST_TAG}"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:39092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:39093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:39092,CONTROLLER://kafka:39093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: '9-fLubcIRYqQaWkrwEThnQ'
    labels:
      - io.confluent.docker.testing=true

  schema-registry:
    hostname: schema-registry 
    image: "${DOCKER_TEST_REGISTRY}confluentinc/cp-schema-registry:${DOCKER_TEST_TAG}"
    depends_on:
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:39092
    labels:
      - io.confluent.docker.testing=true

  ksqldb-server:
    hostname: ksqldb-server
    image: "${DOCKER_REGISTRY}confluentinc/cp-ksqldb:${DOCKER_TAG}"
    depends_on:
      - kafka
      - schema-registry
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka:39092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    labels:
      - io.confluent.docker.testing=true

  ksqldb-cli:
    hostname: ksqldb-cli 
    image: "${DOCKER_REGISTRY}confluentinc/cp-ksqldb:${DOCKER_TAG}"
    depends_on:
      - ksqldb-server
    entrypoint:
        - "/bin/sleep"
        - "1800"
