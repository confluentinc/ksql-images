ARG DOCKER_UPSTREAM_REGISTRY
ARG DOCKER_UPSTREAM_TAG
ARG UBI_MINIMAL_VERSION

FROM ${DOCKER_UPSTREAM_REGISTRY}confluentinc/cp-base-java:${DOCKER_UPSTREAM_TAG}

EXPOSE 8088

ENV COMPONENT=ksqldb-server
ENV KSQL_CLASSPATH=/usr/share/java/ksqldb-server/*

ARG BUILD_NUMBER=-1
ARG PROJECT_VERSION
ARG ARTIFACT_ID
ARG GIT_COMMIT

LABEL maintainer="partner-support@confluent.io"
LABEL vendor="Confluent"
LABEL version=$GIT_COMMIT
LABEL release=$PROJECT_VERSION
LABEL name=$ARTIFACT_ID
LABEL summary="Confluent KSQL is the streaming SQL engine that enables real-time data processing against Apache Kafka®."
LABEL description="Confluent KSQL is the streaming SQL engine that enables real-time data processing against Apache Kafka®."
LABEL io.confluent.docker.git.id=$GIT_COMMIT
LABEL io.confluent.docker.build.number=$BUILD_NUMBER
LABEL io.confluent.docker=true
LABEL io.confluent.docker.git.repo="confluentinc/ksql-images"

ARG CONFLUENT_VERSION
ARG CONFLUENT_PACKAGES_REPO
ARG CONFLUENT_PLATFORM_LABEL

USER root

RUN echo "===> Adding confluent repository...${CONFLUENT_PACKAGES_REPO}" \
    && rpm --import ${CONFLUENT_PACKAGES_REPO}/archive.key \
    && printf "[Confluent] \n\
name=Confluent repository \n\
baseurl=${CONFLUENT_PACKAGES_REPO}/ \n\
gpgcheck=1 \n\
gpgkey=${CONFLUENT_PACKAGES_REPO}/archive.key \n\
enabled=1 " > /etc/yum.repos.d/confluent.repo

RUN echo "===> Installing Confluent security plugins ..." \
    && microdnf install -y confluent-security-${CONFLUENT_VERSION} \
    && echo "===> Installing Confluent Hub client ..." \
    && microdnf install -y confluent-hub-client-${CONFLUENT_VERSION} \
    && echo "===> Installing Confluent Telemetry package ..." \
    # We are installing confluent-telemetry package explicitly because
    # KSQL's deb/rpm packages cannot directly depend on
    # confluent-telemetry package as KSQL is Open Source.
    && microdnf install -y confluent-telemetry-${CONFLUENT_VERSION} \
    && echo "====> Installing ksqldb" \
    && microdnf install -y confluent-ksqldb-${CONFLUENT_VERSION} \
    && echo "===> Removing extra directories installed in confluent-security ..." \
    && rm -rf /usr/share/java/confluent-security/schema-registry /usr/share/java/confluent-security/connect /usr/share/java/confluent-security/kafka-rest \
    && echo "===> Deduping jars present in /usr/share/java ..." \
    && package_dedupe /usr/share/java

RUN echo "===> Cleaning up ..."  \
    && microdnf clean all \
    && rm -rf /tmp/* /etc/yum.repos.d/confluent.repo

# Create directories needed by all modes
RUN mkdir -p /usr/share/confluent-hub-components \
    && chown appuser:appuser -R /usr/share/confluent-hub-components \
    && mkdir -p /var/lib/kafka-streams \
    && chown appuser:appuser -R /var/lib/kafka-streams

# Copy all configuration files
COPY --chown=appuser:appuser include/etc/confluent/docker/ /etc/confluent/docker/
COPY --chown=appuser:appuser include/etc/confluent/docker/docker-server/* /etc/confluent/docker/docker-server/
COPY --chown=appuser:appuser include/etc/confluent/docker/docker-cli/* /etc/confluent/docker/docker-cli/

# Create directories for server, CLI, and examples
RUN mkdir -p /etc/ksqldb-server /etc/ksqldb-server/secrets /etc/ksqldb-cli /etc/ksqldb-cli/secrets /usr/logs /var/log/ksqldb-cli \
  && chown appuser:root -R /etc/ksqldb-server /etc/ksqldb-cli /usr/logs /var/log/ksqldb-cli \
  && chmod ug+w -R /etc/ksqldb-server /etc/ksqldb-cli /usr/logs /var/log/ksqldb-cli

# Make all scripts executable
RUN chmod +x /etc/confluent/docker/entrypoint.sh \
  && chmod +x /etc/confluent/docker/docker-server/run \
  && chmod +x /etc/confluent/docker/docker-server/configure \
  && chmod +x /etc/confluent/docker/docker-server/launch \
  && chmod +x /etc/confluent/docker/docker-server/ensure \
  && chmod +x /etc/confluent/docker/docker-cli/run \
  && chmod +x /etc/confluent/docker/docker-cli/configure

USER appuser

# Set default environment variables
ENV KSQL_LOG4J_OPTS=-Dlog4j2.configurationFile=file:/etc/ksqldb-server/log4j2.yaml

# Default entrypoint is the wrapper script that determines mode
ENTRYPOINT ["/etc/confluent/docker/entrypoint.sh"]
# Default mode is server
CMD ["ksqldb-server"]